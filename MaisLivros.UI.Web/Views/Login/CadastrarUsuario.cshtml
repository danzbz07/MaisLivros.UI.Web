@model UsuarioViewMOD
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}

<div class="container-fluid h-100">
    <div class="row d-flex justify-content-center align-items-center h-100 pb-3">
        <div class="col-md-9 col-lg-6 col-xl-5 text-center text-white">
            <h1>+ Livros</h1>
            <h2>Aprenda</h2>
            <h2>e Compartilhe</h2>
        </div>
        <div class="col-md-8 col-lg-6 col-xl-6 offset-xl-1 card h-100 bg-light">
            @using (Html.BeginForm("CadastrarUsuario", "Login", FormMethod.Post, new { @id = "form-login" }))
            {
                <div class="col-sm-12 px-sm-3 px-lg-5">
                    <h2 class="text-dark py-5">Crie sua conta</h2>

                    <div class="tab">
                        <div class="row mb-3">
                            <div class="col-12">
                                @Html.Label("Nome Completo", new { @class = "font-weight-bold" }) <span class="text-warning display-17px font-weight-bold">*</span>
                                @Html.TextBoxFor(x => x.TxNome, "", new { @class = "form-control", @placeholder = "Digite o Nome Completo", @required = true })
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-12">
                                @Html.Label("E-mail", new { @class = "font-weight-bold" }) <span class="text-warning display-17px font-weight-bold">*</span>
                                @Html.TextBoxFor(x => x.TxEmail, "", new { @class = "form-control", @placeholder = "exemplo@dominio.com", @required = true })
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-12">
                                @Html.Label("Senha", new { @class = "font-weight-bold" }) <span class="text-warning display-17px font-weight-bold">*</span>
                                @Html.TextBoxFor(x => x.TxSenha, "", new { @class = "form-control", @placeholder = "Digite a senha", @type = "password", @required = true })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <p class="text-center">Já possui uma conta ? <a href="~/Login/Entrar">Clique aqui</a></p>
                            </div>
                        </div>
                    </div>
                    <div class="tab">
                        <div class="row pb-3">
                            <div class="col-12">
                                <label class="font-weight-bold">Tipo de Conta</label> <span class="text-warning display-17px font-weight-bold">*</span>
                                <div class="form-check p-lg-0">
                                    @Html.RadioButtonFor(x => x.ChkTpPessoa, "F", new { @id = "pessoaFisica", @checked = "true", @name = "tpConta", @class = "form-check-input" })
                                    <label class="form-check-label" for="pessoaFisica">
                                        Pessoa Fisica
                                    </label>
                                </div>
                                <div class="form-check p-lg-0">
                                    @Html.RadioButtonFor(x => x.ChkTpPessoa, "J", new { @id = "pessoaJuridica", @name = "tpConta", @class = "form-check-input" })
                                    <label class="form-check-label" for="pessoaJuridica">
                                        Pessoa Juridica
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-12" id="Cpf">
                                @Html.Label("CPF:", new { @class = "font-weight-bold" }) <span class="text-warning display-17px font-weight-bold">*</span>
                                @Html.TextBoxFor(x => x.TxCpf, "", new { @class = "form-control", @placeholder = "000.000.000-00", @id = "cpf", @maxlength = "14", @required = true })
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="col-12" id="Cnpj">
                                @Html.Label("CNPJ:", new { @class = "font-weight-bold" }) <span class="text-warning display-17px font-weight-bold">*</span>
                                @Html.TextBoxFor(x => x.TxCnpj, "", new { @class = "form-control", @placeholder = "Digite o CNPJ", @id = "cnpj" })
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-12">
                                @Html.Label("Endereço:", new { @class = "font-weight-bold" }) <span class="text-warning display-17px font-weight-bold">*</span>
                                @Html.TextBoxFor(x => x.TxEndereco, "", new { @class = "form-control", @placeholder = "Digite o Endereço", @required = true })
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-12">
                                @Html.Label("Telefone:", new { @class = "font-weight-bold" }) <span class="text-warning display-17px font-weight-bold">*</span>
                                @Html.TextBoxFor(x => x.TxTelefone, "", new { @class = "form-control", @placeholder = "(00) 0000-0000", @required = true, @id = "telefone" })
                            </div>
                        </div>
                    </div>
                    <div style="overflow:auto;">
                        <div style="float:right;">
                            <button type="button" class="btn btn-secondary" id="prevBtn" onclick="nextPrev(-1)">Voltar</button>
                            <button type="button" class="btn btn-primary" id="nextBtn" onclick="nextPrev(1)">Continuar</button>
                            <button type="submit" class="btn btn-primary" id="submit" style="display: none;">Entrar</button>
                        </div>
                    </div>

                    <div style="text-align:center;margin-top:40px;">
                        <span class="step"></span>
                        <span class="step"></span>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<script>
    $('#Cnpj').fadeOut()

    $('.form-check-input').change(function () {
        console.log('entrou', this.value)
        var cpf = $('#cpf');
        var cnpj = $('#cnpj');

        if (this.value == 'F') {
            $('#Cpf').fadeIn("slow")

            cpf.attr('required', 'required');
            cnpj.removeAttr('required');

            $('#Cnpj').fadeOut("slow")
        }
        else if (this.value == 'J') {
            $('#Cnpj').fadeIn("slow")
            cnpj.attr('required', 'required');
            cpf.removeAttr('required');
            $('#Cpf').fadeOut("slow")
        }
    });


    var TabAtual = 0;
    mostrarTab(TabAtual);

    function mostrarTab(n) {
        var x = document.getElementsByClassName("tab");
        x[n].style.display = "block";
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            $("#nextBtn").hide();
            $("#submit").show();
        } else {
            $("#nextBtn").show();
            $("#submit").hide();
            document.getElementById("nextBtn").innerHTML = "Continuar";
        }
        fixStepIndicator(n)
    }

    function nextPrev(n) {
        var x = document.getElementsByClassName("tab");
        if (n == 1 && !validarForm()) return false;
        x[TabAtual].style.display = "none";
        TabAtual = TabAtual + n;
        if (TabAtual >= x.length) {
            document.getElementById("form-login").submit();
            return false;
        }
        mostrarTab(TabAtual);
    }

    function validarForm() {
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[TabAtual].getElementsByTagName("input");
        for (i = 0; i < y.length; i++) {
            if (y[i].value == "") {
                y[i].className += " invalid";
                valid = false;
            }
        }
        if (valid) {
            document.getElementsByClassName("step")[TabAtual].className += " finish";
        }
        return valid;
    }

    function fixStepIndicator(n) {
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        x[n].className += " active";
    }


    // Máscara
    $("#cpf").mask("000.000.000-00");
    $('#telefone').mask('(00) 0000-0000');
    $('#cnpj').mask('00.000.000/0000-00', { reverse: true });

    $('#cpf').blur(function () {
        var cpf = $(this).val().replace(/[^\d]+/g, ''); // remove caracteres não numéricos

        if (cpf.length != 11 || !validarCPF(cpf)) { // se o CPF não for válido
            $(this).addClass('is-invalid'); // adiciona a classe 'is-invalid' para exibir mensagem de erro
            $(this).removeClass('is-valid'); // remove a classe 'is-valid' (se estiver presente)
            $('#btn-submit').attr('disabled', true); // desabilita o botão submit
            $(this).next('.invalid-feedback').html('CPF inválido'); // exibe a mensagem de erro abaixo do campo
        } else { // se o CPF for válido
            $(this).removeClass('is-invalid'); // remove a classe 'is-invalid' (se estiver presente)
            $(this).addClass('is-valid'); // adiciona a classe 'is-valid'
            $('#submit').attr('disabled', false); // habilita o botão submit
            $(this).next('.invalid-feedback').html(''); // remove a mensagem de erro abaixo do campo
        }
    });

    // Função para validar o CPF
    function validarCPF(cpf) {
        var soma = 0;
        var resto;

        if (cpf == "00000000000") return false;

        for (i = 1; i <= 9; i++) soma = soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);
        resto = (soma * 10) % 11;

        if ((resto == 10) || (resto == 11)) resto = 0;
        if (resto != parseInt(cpf.substring(9, 10))) return false;

        soma = 0;
        for (i = 1; i <= 10; i++) soma = soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);
        resto = (soma * 10) % 11;

        if ((resto == 10) || (resto == 11)) resto = 0;
        if (resto != parseInt(cpf.substring(10, 11))) return false;
        return true;
    }

    //Submit
    $('#form-login').submit(function (event) {
        var cpfInput = $('#cpf');
        var cnpjInput = $('#cnpj');

        var cnpj = cnpjInput.val().replace(/[^\d]+/g, ''); // Remove caracteres não numéricos do CNPJ
        var cpf = cpfInput.val().replace(/[^\d]+/g, ''); // Remove caracteres não numéricos do CPF
        if (cpfInput.is(":visible") && (cpf === "" || !validarCPF(cpf))) {
            event.preventDefault();
            console.log('cpf invalido')
            event.preventDefault();
            cpfInput.addClass('invalid');
            cpfInput.after('<div class="cpf-error">CPF inválido</div>');
        }

        if (cnpjInput.is(":visible")) {
            console.log('entrou cnpj')
            var cnpjRegex = /^\d{2}\.\d{3}\.\d{3}\/\d{4}-\d{2}$/;
            if (!cnpjRegex.test(cnpj)) {
                console.log('invali')
                event.preventDefault();
                cnpjInput.addClass('is-invalid');
                cnpjInput.after('<div class="cnpj-error">CNPJ inválido</div>');
            }
        }
    });
</script>